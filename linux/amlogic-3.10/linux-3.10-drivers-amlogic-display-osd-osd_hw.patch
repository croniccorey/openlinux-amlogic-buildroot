Index: arm-src-kernel-2014-08-12-808e85736c/drivers/amlogic/display/osd/osd_hw.c
===================================================================
--- arm-src-kernel-2014-08-12-808e85736c.orig/drivers/amlogic/display/osd/osd_hw.c	2014-08-11 15:53:16.000000000 +0800
+++ arm-src-kernel-2014-08-12-808e85736c/drivers/amlogic/display/osd/osd_hw.c	2014-08-12 18:24:12.180483835 +0800
@@ -2637,7 +2637,6 @@
 	osd_hw.color_info[OSD2]=NULL;
 	vf.width =vf.height=0;
 	osd_hw.color_key[OSD1]=osd_hw.color_key[OSD2]=0xffffffff;
-	osd_hw.free_scale_enable[OSD1]=osd_hw.free_scale_enable[OSD2]=0;
 	osd_hw.scale[OSD1].h_enable=osd_hw.scale[OSD1].v_enable=0;
 	osd_hw.scale[OSD2].h_enable=osd_hw.scale[OSD2].v_enable=0;
 	osd_hw.mode_3d[OSD2].enable=osd_hw.mode_3d[OSD1].enable=0;
@@ -2656,6 +2655,12 @@
 	osd_hw.free_scale_mode[OSD1] = osd_hw.free_scale_mode[OSD2] = 0;
 #endif
 
+#if MESON_CPU_TYPE >= MESON_CPU_TYPE_MESON8
+    osd_hw.free_scale_mode[OSD1] = osd_hw.free_scale_mode[OSD2] = 1;
+#else
+    osd_hw.free_scale_mode[OSD1] = osd_hw.free_scale_mode[OSD2] = 0;
+#endif
+
 	memset(osd_hw.rotate,0,sizeof(osd_rotate_t));
 
 #ifdef FIQ_VSYNC
@@ -2780,6 +2785,33 @@
 }
 #endif //CONFIG_FB_OSD2_CURSOR
 
+void osddev_copy_data_tocursor_hw(u32 cursor_mem_vaddr, aml_hwc_addr_t *hwc_mem)
+{
+	u32 tmp;
+	u32 i;
+	u32 value_pixel = 0;
+	u32 size = 32*32*4;
+
+	if (hwc_mem->addr & 0x3) { /* Address not 32bit aligned */
+		for (i = 0; i < size; i += 4) {
+			tmp = readb(hwc_mem->addr + i);
+			value_pixel = tmp;
+			tmp = readb(hwc_mem->addr + i + 1);
+			value_pixel |= (tmp << 8);
+			tmp = readb(hwc_mem->addr + i + 2);
+			value_pixel |= (tmp << 16);
+			tmp = readb(hwc_mem->addr + i + 3);
+			value_pixel |= (tmp << 24);
+			writel(value_pixel, cursor_mem_vaddr+ i);
+		}
+	} else {
+		for (i = 0; i < size; i += 4) {
+			tmp = readl(hwc_mem->addr + i);
+			writel(tmp, cursor_mem_vaddr+ i);
+		}
+	}
+}
+
 void  osd_suspend_hw(void)
 {
 	osd_hw.reg_status_save = aml_read_reg32(P_VPP_MISC) & OSD_RELATIVE_BITS;
